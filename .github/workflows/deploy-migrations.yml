name: Deploy Database Migrations

on:
  push:
    branches: [ main ]
    paths:
      - 'supabase/migrations/**'
      - '.github/workflows/deploy-migrations.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'supabase/migrations/**'

jobs:
  deploy-migrations:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Install Supabase CLI
        run: |
          curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
          sudo apt-get install -y nodejs
          npm i -g supabase@latest

      - name: Verify DATABASE_URL secret
        run: |
          if [ -z "${{ secrets.DATABASE_URL }}" ]; then
            echo "‚ùå DATABASE_URL secret missing"; 
            exit 1; 
          fi
          echo "‚úÖ DATABASE_URL secret is configured"

      - name: Apply migrations
        run: |
          set -e
          echo "üöÄ Starting migration deployment..."
          
          # Apply all migrations in order using supabase db push
          if [ -d "supabase/migrations" ] && [ "$(ls -A supabase/migrations)" ]; then
            echo "üìÅ Found migrations directory with files"
            ls -la supabase/migrations/
            
            # Apply each migration file in order
            for migration_file in supabase/migrations/*.sql; do
              if [ -f "$migration_file" ]; then
                echo "‚ñ∂Ô∏è Applying migration: $(basename "$migration_file")"
                psql "${{ secrets.DATABASE_URL }}" -v ON_ERROR_STOP=1 -f "$migration_file"
                echo "‚úÖ Successfully applied: $(basename "$migration_file")"
              fi
            done
            
            echo "üéâ All migrations applied successfully!"
          else
            echo "‚ÑπÔ∏è No migrations found to apply"
          fi

      - name: Verify migrations (optional)
        continue-on-error: true
        run: |
          echo "üîç Running post-migration verification..."
          if [ -f "scripts/verify-schema.sql" ]; then
            psql "${{ secrets.DATABASE_URL }}" -v ON_ERROR_STOP=1 -f scripts/verify-schema.sql
            echo "‚úÖ Schema verification passed"
          fi
          
          if [ -f "scripts/verify-rls.sql" ]; then
            psql "${{ secrets.DATABASE_URL }}" -v ON_ERROR_STOP=1 -f scripts/verify-rls.sql
            echo "‚úÖ RLS verification passed"
          fi

      - name: Migration summary
        if: always()
        run: |
          echo "üìã Migration Deployment Summary:"
          echo "  ‚úÖ Automation Verified ‚Äî migrations applied in order"
          if [ -d "supabase/migrations" ]; then
            echo "  üìÅ Migrations processed:"
            for migration_file in supabase/migrations/*.sql; do
              if [ -f "$migration_file" ]; then
                echo "    - $(basename "$migration_file")"
              fi
            done
          fi
          echo "  üéØ Pipeline completed successfully"