name: Deploy Supabase Migrations
on:
  push:
    branches: [ main ]
    paths:
      - "supabase/migrations/**"
  workflow_dispatch:
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - uses: supabase/setup-cli@v1

      - name: Validate migration files
        run: |
          echo "Validating incremental migration file naming and order..."
          ls -la supabase/migrations/
          echo "Number of migration files: $(ls -1 supabase/migrations/*.sql | wc -l)"

      - name: Sync local and remote migration history
        run: |
          echo "Cleaning any existing prepared statements..."
          psql "$DATABASE_URL" -c "DEALLOCATE ALL;" || echo "No prepared statements to clean"
          
          echo "Pulling remote migration state to sync with local..."
          supabase db pull --db-url "$DATABASE_URL" --debug || echo "Pull completed with warnings (expected)"
          
          echo "Cleaning prepared statements after pull..."
          psql "$DATABASE_URL" -c "DEALLOCATE ALL;" || echo "No prepared statements to clean"
          
          echo "Checking for migration history mismatches..."
          # Get the latest migration timestamp from our local files
          LATEST_LOCAL=$(ls supabase/migrations/*.sql | tail -1 | sed 's/.*\/\([0-9]\+\)_.*/\1/')
          echo "Latest local migration timestamp: $LATEST_LOCAL"
          
          # Repair migration history if needed
          echo "Repairing migration status to ensure consistency..."
          supabase migration repair --status reverted $LATEST_LOCAL --db-url "$DATABASE_URL" || echo "Repair completed"
          
          echo "Cleaning prepared statements after repair..."
          psql "$DATABASE_URL" -c "DEALLOCATE ALL;" || echo "No prepared statements to clean"
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Deploy incremental migrations
        run: |
          echo "Cleaning prepared statements before deployment..."
          psql "$DATABASE_URL" -c "DEALLOCATE ALL;" || echo "No prepared statements to clean"
          
          echo "Deploying incremental migrations..."
          echo "Migration files to deploy:"
          ls -la supabase/migrations/*.sql
          
          # Deploy using standard migration approach (no force flag)
          supabase db push --db-url "$DATABASE_URL" --debug
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Verify deployment
        run: |
          echo "Verifying migration deployment..."
          supabase migration list --db-url "$DATABASE_URL" || echo "Migration list completed"
          
          echo "Deployment completed successfully!"
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}