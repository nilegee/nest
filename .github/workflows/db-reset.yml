name: Manual DB Reset (Danger)

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: "Type ERASE_AND_APPLY to proceed (DANGEROUS)"
        required: true

jobs:
  reset:
    if: ${{ github.event.inputs.confirm == 'ERASE_AND_APPLY' && secrets.CONFIRM_DB_RESET == 'TRUE' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install psql (PostgreSQL client)
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: (Optional) Install Supabase CLI
        continue-on-error: true
        run: |
          curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
          sudo apt-get install -y nodejs
          npm i -g supabase@latest || true

      - name: Sanity: require DATABASE_URL
        run: |
          if [ -z "${{ secrets.DATABASE_URL }}" ]; then
            echo "DATABASE_URL secret missing"; exit 1; fi

      - name: Pre-reset backup (pg_dump)
        run: |
          pg_dump --no-owner --no-privileges "${{ secrets.DATABASE_URL }}" > backup-before-reset-$(date +%Y%m%d-%H%M%S).sql

      - name: Upload backup artifact
        uses: actions/upload-artifact@v4
        with:
          name: pre-reset-backup
          path: backup-before-reset-*.sql

      - name: Apply schema (Supabase CLI preferred)
        id: apply
        run: |
          set -e
          if command -v supabase >/dev/null 2>&1; then
            echo "Using Supabase CLI"
            supabase db reset --db-url "${{ secrets.DATABASE_URL }}" --schema-file db/schema.sql
          else
            echo "Supabase CLI not found, using psql fallback"
            psql "${{ secrets.DATABASE_URL }}" -v ON_ERROR_STOP=1 -f db/schema.sql
          fi

      - name: Verify RLS
        run: psql "${{ secrets.DATABASE_URL }}" -v ON_ERROR_STOP=1 -f scripts/verify-rls.sql

      - name: Verify schema shape
        run: psql "${{ secrets.DATABASE_URL }}" -v ON_ERROR_STOP=1 -f scripts/verify-schema.sql