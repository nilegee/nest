---
name: Bootstrap DB from Migrations (manual)
"on":
  workflow_dispatch:
permissions:
  contents: read

concurrency:
  group: bootstrap-db
  cancel-in-progress: false

jobs:
  apply:
    name: Apply migrations + snapshot + types
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Verify DATABASE_URL
        run: |
          if [ -z "${{ secrets.DATABASE_URL }}" ]; then
            echo "::error::DATABASE_URL secret is missing."
            exit 1
          fi

      - name: Apply migrations (sorted)
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          set -euo pipefail
          shopt -s nullglob
          echo "Applying migrations to $DATABASE_URL"
          for f in $(ls -1 supabase/migrations/*.sql | sort); do
            echo "==> $f"
            psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -f "$f"
          done

      - name: Snapshot live schema JSON (if snapshot function exists)
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          set -e
          # Try RPC snapshot; ignore if the function doesn't exist yet
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 \
            -c "SELECT to_jsonb('ok'::text)" >/dev/null
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -tA \
            -c "SELECT coalesce(public.snapshot_schema(), public.get_schema_catalog())" \
            > supabase/schema_inferred.json || \
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -tA \
            -c "SELECT public.get_schema_catalog()" \
            > supabase/schema_inferred.json || \
          echo "[]"> supabase/schema_inferred.json

      - name: Generate TS types
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          npm -g i supabase
          npx supabase gen types typescript \
            --db-url "$DATABASE_URL" --schema public > web/supabase.types.ts

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: schema-and-types
          path: |
            supabase/schema_inferred.json
            web/supabase.types.ts
